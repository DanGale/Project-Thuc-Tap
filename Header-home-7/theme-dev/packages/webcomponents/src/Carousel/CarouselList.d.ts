export declare class CarouselList extends HTMLElement {
    isThumbMoving: boolean;
    private unsubscribe;
    private animated;
    private thumbAnimated;
    private snakeAnimated;
    private prevTranslate;
    private axis;
    private pan;
    private thumbPan;
    private dEnd;
    private prevDx;
    private prevDy;
    private prevThumbDx;
    private prevThumbDy;
    private isDragging;
    private timeoutId;
    private anchorEls;
    private _options;
    private initialized;
    private autoPlayStart;
    private autoPlayNext;
    private tempStop;
    private prevScrollY;
    private startClientX;
    isNextForSnake: boolean;
    private isSnakeUpdated;
    private get providerElement();
    static get observedAttributes(): string[];
    private get slideSize();
    private get containerSize();
    private get isThumbnail();
    private get options();
    private set options(value);
    private get activeIndex();
    private setOptions;
    private withRtl;
    private setTranslate;
    private getDxy;
    private handleSlide;
    private handleSnake;
    private listener;
    private rubberBandClamp;
    private panMove;
    private magnet;
    private panEnd;
    private thumbPanMove;
    private thumbPanEnd;
    private frameAutoPlay;
    private removeFrameAutoPlay;
    private handlePause;
    private handlePauseHover;
    private handleAutoPlay;
    private handleActiveSlide;
    private setListSize;
    private setContainerSize;
    private handleResize;
    private handleAnchor;
    private bindAnchor;
    private handleLoop;
    private removeSlideCloned;
    private handleSlideClick;
    private reset;
    connectedCallback(): Promise<void>;
    attributeChangedCallback(name: string, oldValue: string, newValue: string): void;
    disconnectedCallback(): void;
}
//# sourceMappingURL=CarouselList.d.ts.map